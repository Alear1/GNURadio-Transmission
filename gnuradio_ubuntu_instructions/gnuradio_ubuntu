#GnuRadio 


##Installation: follow instruction and installed gr 3.8.3
	https://wiki.gnuradio.org/index.php/InstallingGR#Ubuntu_PPA_Installation 
	
		sudo add-apt-repository ppa:gnuradio/gnuradio-releases-3.8
		sudo apt-get update
		sudo apt install gnuradio
		
	or
	
	[not tried] using pybombs
	 	installed pybombs (see https://github.com/gnuradio/pybombs) and 
		reinstalled installed gnuradio
		sudo apt-get install python3-pip
		sudo pip3 install pybombs
		pybombs auto-config
		pybombs recipes add-defaults
		pybombs prefix init ~/prefix-3.8 -R gnuradio-default
		source ~/prefix-3.8/setup_env.sh

## run a test and install additional required files
	https://www.youtube.com/watch?v=6gx9xfAC6Wk
	Install graphic related software
	https://zoomadmin.com/HowToInstall/UbuntuPackage/libx11-dev
	
## check the installed GNU Radio components 
	type in terminal
		gnuradio-config-info --enabled-components | sed 's/;/\n/g'
	source: https://wiki.gnuradio.org/index.php/FAQ#I_installed_GNU_Radio.2C_but_some_components_seem_to_be_missing.	

## adding RTL-SDR driver: insatll the driver for RTL SDR dongle BEFORE installing/adding osmocom module for GRC
	If not installed proberly, you see these error messages in GRC:
		RuntimeError: No supported devices found (check the connection and/or udev rules).
		RuntimeError: Failed to open rtlsdr device
		RuntimeError: list contains invalid format!
	
	solution: using git clone and cmake
		install RTL-SDR following https://osmocom.org/projects/rtl-sdr/wiki
		go to folder that you wanted to clone
			git clone git://git.osmocom.org/rtl-sdr.git;
			cd rtl-sdr;
			mkdir build;
			cd build;
			cmake ../ -DINSTALL_UDEV_RULES=ON -DDETACH_KERNEL_DRIVER=ON -DENABLE_ZEROCOPY=ON
			make
			sudo make install
			sudo ldconfig
		test:
			rtl_test -t
			rtl_test -h for more options

## adding Airspy driver: insatll the driver for Airspy mini dongle BEFORE installing/adding osmocom module for GRC
	Messages in GRC:	
		RuntimeError: No supported devices found (check the connection and/or udev rules).
	solution:
		following the steps from https://github.com/airspy/airspyone_host#how-to-build-the-host-software-on-linux
		go to folder that you wanted to clone
			wget https://github.com/airspy/airspyone_host/archive/master.zip
			unzip master.zip
			cd airspyone_host-master
			mkdir build
			cd build
			cmake ../ -DINSTALL_UDEV_RULES=ON
			make
			sudo make install
			sudo ldconfig

## adding Hackrf driver: insatll the driver for HackRF One dongle BEFORE installing/adding osmocom module for GRC
	Messages in GRC:	
		RuntimeError: No supported devices found (check the connection and/or udev rules).
	solution:
		following the steps from https://hackrf.readthedocs.io/en/latest/installing_hackrf_software.html
		go to folder that you wanted to clone
			git clone https://github.com/mossmann/hackrf.git
			cd hackrf/host
			mkdir build
			cd build
			cmake ..
			make
			sudo make install
			sudo ldconfig
		
		test 
			use this command to get info if the driver is installed properly: hackrf_info

## adding osmocom for gr 3.8.3 (need to install both apt version and github version)
	using apt to install it 
		sudo apt-get update		
		sudo apt install gr-osmosdr
		
	Received error in GRC 
		RuntimeError: list contains invalid format!
	
	using git clone and cmake
		
		for 3.8 version ONLY
		go to folder that you wanted to clone
			git clone -b gr3.8 https://github.com/osmocom/gr-osmosdr.git
			cd gr-osmosdr/
			mkdir build
			cd build
			cmake ..
			make
			sudo make install
			sudo ldconfig	
		
		* still CANNOT install Osmocom IQ Imbalance Correction
		

## add gr.satellites OoT using Cmake
	source in gnuradio_satellite.txt
	git and cmake procedures in ubuntu_terminal_line.txt
	
## add gr.satnogs OoT using Cmake	
	source in gnuradio_satellite.txt
	git and cmake procedures in ubuntu_terminal_line.txt

## add gr.leo OoT using Cmake	
	source in gnuradio_satellite.txt
	git and cmake procedures in ubuntu_terminal_line.txt

	
## check gnuradio SDR or other library installed
	to find all the gnuradio components I'd installed:
		apt list --installed | grep gnuradio
		apt list --installed | grep sdr
		apt list --installed | grep osmo
		apt list --installed | grep soapy
		apt list --installed | grep soapy
		
		
		ldconfig -p | grep <library name>
	
## uninstalled the components using commands like this:

	sudo apt-get remove --purge libgnuradio*
	sudo apt-get remove --purge soapyosmo*
	sudo apt-get remove --purge libsoapy*
	sudo apt-get remove --purge libosmosdr*
	sudo apt-get remove --purge libmirisdr0*
	sudo apt-get remove --purge librtlsdr*
	sudo apt-get remove --purge libsoapysdr0*
	
## find and delete the files with specific name
	
	locate soapy
		use this command to delete all the files: sudo rm -r <pathname> to deleted the file
		use back t back commands to update locate database: sudo updatedb; sudo apt-get clean; locate soapy
	locate rtlsdr 
		... same as above
	locate airspy 
		... same as above
	locate libmirisdr
		... same as above
	locate osmosdr
		... same as above
	locate sdr
		... same as above
	
	


## projects:
		
### developing a simulator to FM transmit NOAA APT Audio using Hack RF
	following the instruction here: 
		https://www.youtube.com/watch?v=ToUZ4Jpa7r8&list=PLVH3WkMDiviWdhMrmT8cg49gmtgfpJwza&index=10
	lessons learned:
		- added the sink block for hack-rf
			- the sample rate of the signal, entering the sink block, should match that of sink block
		- added filter to block harmonics
			- play with cut off and transitional width value
				- cut off should be less than half of the input signal sample rate
		- implemented both wideband fm (WBFM) and narrowband fm (NBFM)
	
	- latest file: fmTransmitter_noaaApt_hackRF[matched output sample rate].grc
		- next step: test with hardware
			* NBFM vs WBFM
			* filter values
			* switch to NOAA file and record with SDR# and decode with NOAA APT
			* play with sink bandwidth value
			* play with sink gains
		- future steps
			- transmit with windows and develop the FM receive

### developing a check file to see if I can change the SDR source frequency from GUI
	file: SDRrecieverSpactrumCheck
	- under development
